import org.gradle.util.GradleVersion
import java.time.Instant

plugins {
    id "fabric-loom" version "0.12.5"
    id "io.github.juuxel.loom-quiltflower" version "1.6.1"
    id "net.nemerosa.versioning" version "2.15.1"
}

group = "selic.re"
version = "1.1.0"

java {
    withSourcesJar()
}

loom {
    mixin {
        defaultRefmapName = "mixins/discord-bridge/refmap.json"
    }
    runs {
        configureEach {
            property "mixin.debug", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url = "https://m2.dv8tion.net/releases"
        content {
            includeGroup "net.dv8tion"
        }
    }
}

configurations {
    transitiveInclude
}

dependencies {
    minecraft "com.mojang:minecraft:1.18.2"
    mappings "net.fabricmc:yarn:1.18.2+build.2:v2"
    modImplementation "net.fabricmc:fabric-loader:0.13.3"

    modImplementation include(fabricApi.module("fabric-api-base", "0.48.0+1.18.2"))
    modImplementation include(fabricApi.module("fabric-lifecycle-events-v1", "0.48.0+1.18.2"))

    implementation(transitiveInclude("net.dv8tion:JDA:4.3.0_293")) {
        exclude module: "opus-java"
    }

    implementation transitiveInclude("club.minnced:discord-webhooks:0.5.7")

    project.configurations.transitiveInclude {
        def includer = { self, Set<ResolvedDependency> dependencies -> 
            dependencies.forEach {
                include("${it.moduleGroup}:${it.moduleName}:${it.moduleVersion}")
                self(self, it.children)
            }
        }

        includer(includer, resolvedConfiguration.firstLevelModuleDependencies)
    }
}

compileJava {
    options.with {
        it.release.set(17)
        it.fork = true
        it.deprecation = true
        it.encoding = "UTF-8"
        it.compilerArgs.addAll(["-Xlint:all", "-parameters"])
    }
}

processResources {
    filesMatching("/fabric.mod.json") {
        expand("version": project.version)
    }
}

jar {
    from("/LICENSE")
    manifest.attributes(
        "Build-Timestamp": Instant.now(),
        "Build-Revision": versioning.info.commit,
        "Build-Jvm": "" +
            "${System.getProperty("java.version")} (" +
            "${System.getProperty("java.vm.vendor")} " +
            "${System.getProperty("java.vm.version")})",
        "Built-By": GradleVersion.current(),

        "Implementation-Title": project.name,
        "Implementation-Version": project.version,
        "Implementation-Vendor": project.group,

        "Specification-Title": project.name,
        "Specification-Version": "1.0.0",
        "Specification-Vendor": project.group,

        "Sealed": "true"
    )
}
